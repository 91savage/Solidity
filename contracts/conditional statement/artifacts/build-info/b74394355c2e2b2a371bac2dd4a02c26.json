{
	"id": "b74394355c2e2b2a371bac2dd4a02c26",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/conditional statement/Loop.sol": {
				"content": "//SPDX-License-Identifier : MIT\r\npragma solidity >=0.8.0 < 0.9.0;\r\n\r\ncontract Loop {\r\n\r\n    //솔리디티엔 for, while, doWhile 문이 있음.\r\n    function forLoop() public {\r\n        uint8 sum = 0;\r\n        for(uint8 i=1; i<11; i++) {\r\n            sum+= 1; // 1,3,6,10 ......\r\n        }\r\n    }\r\n\r\n    function whileLoop() public {\r\n        uint8 sum =0;\r\n        uint8 i = 1;\r\n        while(i<11){\r\n            sum+=1; // 1,3,6,10 .....\r\n            i++;\r\n        }\r\n    }\r\n\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/conditional statement/Loop.sol": {
				"Loop": {
					"abi": [
						{
							"inputs": [],
							"name": "forLoop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "whileLoop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/conditional statement/Loop.sol\":69:487  contract Loop {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/conditional statement/Loop.sol\":69:487  contract Loop {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xe7c898ef\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xfc0e6008\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/conditional statement/Loop.sol\":305:476  function whileLoop() public {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/conditional statement/Loop.sol\":150:297  function forLoop() public {... */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/conditional statement/Loop.sol\":305:476  function whileLoop() public {... */\n    tag_6:\n        /* \"contracts/conditional statement/Loop.sol\":344:353  uint8 sum */\n      0x00\n        /* \"contracts/conditional statement/Loop.sol\":367:374  uint8 i */\n      dup1\n        /* \"contracts/conditional statement/Loop.sol\":377:378  1 */\n      0x01\n        /* \"contracts/conditional statement/Loop.sol\":367:378  uint8 i = 1 */\n      swap1\n      pop\n        /* \"contracts/conditional statement/Loop.sol\":389:469  while(i<11){... */\n    tag_10:\n        /* \"contracts/conditional statement/Loop.sol\":397:399  11 */\n      0x0b\n        /* \"contracts/conditional statement/Loop.sol\":395:396  i */\n      dup2\n        /* \"contracts/conditional statement/Loop.sol\":395:399  i<11 */\n      0xff\n      and\n      lt\n        /* \"contracts/conditional statement/Loop.sol\":389:469  while(i<11){... */\n      iszero\n      tag_11\n      jumpi\n        /* \"contracts/conditional statement/Loop.sol\":420:421  1 */\n      0x01\n        /* \"contracts/conditional statement/Loop.sol\":415:421  sum+=1 */\n      dup3\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      swap2\n      pop\n        /* \"contracts/conditional statement/Loop.sol\":454:457  i++ */\n      dup1\n      dup1\n      tag_14\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      swap2\n      pop\n      pop\n        /* \"contracts/conditional statement/Loop.sol\":389:469  while(i<11){... */\n      jump(tag_10)\n    tag_11:\n        /* \"contracts/conditional statement/Loop.sol\":333:476  {... */\n      pop\n      pop\n        /* \"contracts/conditional statement/Loop.sol\":305:476  function whileLoop() public {... */\n      jump\t// out\n        /* \"contracts/conditional statement/Loop.sol\":150:297  function forLoop() public {... */\n    tag_8:\n        /* \"contracts/conditional statement/Loop.sol\":187:196  uint8 sum */\n      0x00\n        /* \"contracts/conditional statement/Loop.sol\":215:222  uint8 i */\n      dup1\n        /* \"contracts/conditional statement/Loop.sol\":223:224  1 */\n      0x01\n        /* \"contracts/conditional statement/Loop.sol\":215:224  uint8 i=1 */\n      swap1\n      pop\n        /* \"contracts/conditional statement/Loop.sol\":211:290  for(uint8 i=1; i<11; i++) {... */\n    tag_17:\n        /* \"contracts/conditional statement/Loop.sol\":228:230  11 */\n      0x0b\n        /* \"contracts/conditional statement/Loop.sol\":226:227  i */\n      dup2\n        /* \"contracts/conditional statement/Loop.sol\":226:230  i<11 */\n      0xff\n      and\n      lt\n        /* \"contracts/conditional statement/Loop.sol\":211:290  for(uint8 i=1; i<11; i++) {... */\n      iszero\n      tag_18\n      jumpi\n        /* \"contracts/conditional statement/Loop.sol\":258:259  1 */\n      0x01\n        /* \"contracts/conditional statement/Loop.sol\":252:259  sum+= 1 */\n      dup3\n      tag_20\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_20:\n      swap2\n      pop\n        /* \"contracts/conditional statement/Loop.sol\":232:235  i++ */\n      dup1\n      dup1\n      tag_21\n      swap1\n      tag_15\n      jump\t// in\n    tag_21:\n      swap2\n      pop\n      pop\n        /* \"contracts/conditional statement/Loop.sol\":211:290  for(uint8 i=1; i<11; i++) {... */\n      jump(tag_17)\n    tag_18:\n      pop\n        /* \"contracts/conditional statement/Loop.sol\":176:297  {... */\n      pop\n        /* \"contracts/conditional statement/Loop.sol\":150:297  function forLoop() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:93   */\n    tag_22:\n        /* \"#utility.yul\":42:49   */\n      0x00\n        /* \"#utility.yul\":82:86   */\n      0xff\n        /* \"#utility.yul\":75:80   */\n      dup3\n        /* \"#utility.yul\":71:87   */\n      and\n        /* \"#utility.yul\":60:87   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:93   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":99:279   */\n    tag_23:\n        /* \"#utility.yul\":147:224   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":144:145   */\n      0x00\n        /* \"#utility.yul\":137:225   */\n      mstore\n        /* \"#utility.yul\":244:248   */\n      0x11\n        /* \"#utility.yul\":241:242   */\n      0x04\n        /* \"#utility.yul\":234:249   */\n      mstore\n        /* \"#utility.yul\":268:272   */\n      0x24\n        /* \"#utility.yul\":265:266   */\n      0x00\n        /* \"#utility.yul\":258:273   */\n      revert\n        /* \"#utility.yul\":285:473   */\n    tag_13:\n        /* \"#utility.yul\":323:326   */\n      0x00\n        /* \"#utility.yul\":342:360   */\n      tag_28\n        /* \"#utility.yul\":358:359   */\n      dup3\n        /* \"#utility.yul\":342:360   */\n      tag_22\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":337:360   */\n      swap2\n      pop\n        /* \"#utility.yul\":374:392   */\n      tag_29\n        /* \"#utility.yul\":390:391   */\n      dup4\n        /* \"#utility.yul\":374:392   */\n      tag_22\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":369:392   */\n      swap3\n      pop\n        /* \"#utility.yul\":415:416   */\n      dup3\n        /* \"#utility.yul\":412:413   */\n      dup3\n        /* \"#utility.yul\":408:417   */\n      add\n        /* \"#utility.yul\":401:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":438:442   */\n      0xff\n        /* \"#utility.yul\":433:436   */\n      dup2\n        /* \"#utility.yul\":430:443   */\n      gt\n        /* \"#utility.yul\":427:466   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":446:464   */\n      tag_31\n      tag_23\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":427:466   */\n    tag_30:\n        /* \"#utility.yul\":285:473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":479:646   */\n    tag_15:\n        /* \"#utility.yul\":516:519   */\n      0x00\n        /* \"#utility.yul\":539:561   */\n      tag_33\n        /* \"#utility.yul\":555:560   */\n      dup3\n        /* \"#utility.yul\":539:561   */\n      tag_22\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":530:561   */\n      swap2\n      pop\n        /* \"#utility.yul\":583:587   */\n      0xff\n        /* \"#utility.yul\":576:581   */\n      dup3\n        /* \"#utility.yul\":573:588   */\n      sub\n        /* \"#utility.yul\":570:611   */\n      tag_34\n      jumpi\n        /* \"#utility.yul\":591:609   */\n      tag_35\n      tag_23\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":570:611   */\n    tag_34:\n        /* \"#utility.yul\":638:639   */\n      0x01\n        /* \"#utility.yul\":631:636   */\n      dup3\n        /* \"#utility.yul\":627:640   */\n      add\n        /* \"#utility.yul\":620:640   */\n      swap1\n      pop\n        /* \"#utility.yul\":479:646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b6c263cd4043df64827a8c08a919803786a47f4f3a43791faa165f9f26475e7b64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610193806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063e7c898ef1461003b578063fc0e600814610045575b600080fd5b61004361004f565b005b61004d610089565b005b600080600190505b600b8160ff1610156100855760018261007091906100ff565b9150808061007d90610134565b915050610057565b5050565b600080600190505b600b8160ff1610156100bf576001826100aa91906100ff565b915080806100b790610134565b915050610091565b5050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061010a826100c3565b9150610115836100c3565b9250828201905060ff81111561012e5761012d6100d0565b5b92915050565b600061013f826100c3565b915060ff8203610152576101516100d0565b5b60018201905091905056fea2646970667358221220b6c263cd4043df64827a8c08a919803786a47f4f3a43791faa165f9f26475e7b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE7C898EF EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFC0E6008 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x4F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0x89 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x85 JUMPI PUSH1 0x1 DUP3 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0xFF JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x7D SWAP1 PUSH2 0x134 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x57 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xBF JUMPI PUSH1 0x1 DUP3 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xFF JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xB7 SWAP1 PUSH2 0x134 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10A DUP3 PUSH2 0xC3 JUMP JUMPDEST SWAP2 POP PUSH2 0x115 DUP4 PUSH2 0xC3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x12E JUMPI PUSH2 0x12D PUSH2 0xD0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F DUP3 PUSH2 0xC3 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x152 JUMPI PUSH2 0x151 PUSH2 0xD0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xC2 PUSH4 0xCD4043DF PUSH5 0x827A8C08A9 NOT DUP1 CALLDATACOPY DUP7 LOG4 PUSH32 0x4F3A43791FAA165F9F26475E7B64736F6C634300081100330000000000000000 ",
							"sourceMap": "69:418:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@forLoop_25": {
									"entryPoint": 137,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@whileLoop_49": {
									"entryPoint": 79,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"checked_add_t_uint8": {
									"entryPoint": 255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:649:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "50:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "60:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "75:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "82:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "71:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "60:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "42:7:1",
														"type": ""
													}
												],
												"src": "7:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "127:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "144:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "147:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "137:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "137:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "241:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "244:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "234:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "265:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "268:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "258:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "258:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "258:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "99:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "327:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "337:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "358:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "342:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:18:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "337:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "369:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "390:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "374:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "374:18:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "369:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "401:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "412:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "415:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "401:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "444:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "446:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "446:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "446:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "433:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "438:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "430:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "430:13:1"
															},
															"nodeType": "YulIf",
															"src": "427:39:1"
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "314:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "317:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "323:3:1",
														"type": ""
													}
												],
												"src": "285:188:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "520:126:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "530:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "555:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "539:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:22:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "530:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "589:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "591:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "591:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "591:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "576:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "583:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "573:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:15:1"
															},
															"nodeType": "YulIf",
															"src": "570:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "631:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "627:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "620:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "506:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "516:3:1",
														"type": ""
													}
												],
												"src": "479:167:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint8(x, y) -> sum {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xff) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063e7c898ef1461003b578063fc0e600814610045575b600080fd5b61004361004f565b005b61004d610089565b005b600080600190505b600b8160ff1610156100855760018261007091906100ff565b9150808061007d90610134565b915050610057565b5050565b600080600190505b600b8160ff1610156100bf576001826100aa91906100ff565b915080806100b790610134565b915050610091565b5050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061010a826100c3565b9150610115836100c3565b9250828201905060ff81111561012e5761012d6100d0565b5b92915050565b600061013f826100c3565b915060ff8203610152576101516100d0565b5b60018201905091905056fea2646970667358221220b6c263cd4043df64827a8c08a919803786a47f4f3a43791faa165f9f26475e7b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE7C898EF EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFC0E6008 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x4F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0x89 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x85 JUMPI PUSH1 0x1 DUP3 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0xFF JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x7D SWAP1 PUSH2 0x134 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x57 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xBF JUMPI PUSH1 0x1 DUP3 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xFF JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xB7 SWAP1 PUSH2 0x134 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10A DUP3 PUSH2 0xC3 JUMP JUMPDEST SWAP2 POP PUSH2 0x115 DUP4 PUSH2 0xC3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x12E JUMPI PUSH2 0x12D PUSH2 0xD0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F DUP3 PUSH2 0xC3 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x152 JUMPI PUSH2 0x151 PUSH2 0xD0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xC2 PUSH4 0xCD4043DF PUSH5 0x827A8C08A9 NOT DUP1 CALLDATACOPY DUP7 LOG4 PUSH32 0x4F3A43791FAA165F9F26475E7B64736F6C634300081100330000000000000000 ",
							"sourceMap": "69:418:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;305:171;;;:::i;:::-;;150:147;;;:::i;:::-;;305:171;344:9;367:7;377:1;367:11;;389:80;397:2;395:1;:4;;;389:80;;;420:1;415:6;;;;;:::i;:::-;;;454:3;;;;;:::i;:::-;;;;389:80;;;333:143;;305:171::o;150:147::-;187:9;215:7;223:1;215:9;;211:79;228:2;226:1;:4;;;211:79;;;258:1;252:7;;;;;:::i;:::-;;;232:3;;;;;:::i;:::-;;;;211:79;;;;176:121;150:147::o;7:86:1:-;42:7;82:4;75:5;71:16;60:27;;7:86;;;:::o;99:180::-;147:77;144:1;137:88;244:4;241:1;234:15;268:4;265:1;258:15;285:188;323:3;342:18;358:1;342:18;:::i;:::-;337:23;;374:18;390:1;374:18;:::i;:::-;369:23;;415:1;412;408:9;401:16;;438:4;433:3;430:13;427:39;;;446:18;;:::i;:::-;427:39;285:188;;;;:::o;479:167::-;516:3;539:22;555:5;539:22;:::i;:::-;530:31;;583:4;576:5;573:15;570:41;;591:18;;:::i;:::-;570:41;638:1;631:5;627:13;620:20;;479:167;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "80600",
								"executionCost": "129",
								"totalCost": "80729"
							},
							"external": {
								"forLoop()": "infinite",
								"whileLoop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 69,
									"end": 487,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 69,
									"end": 487,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69,
									"end": 487,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 69,
									"end": 487,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 69,
									"end": 487,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 487,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 69,
									"end": 487,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 69,
									"end": 487,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 69,
									"end": 487,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 487,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 487,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 69,
									"end": 487,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 69,
									"end": 487,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69,
									"end": 487,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69,
									"end": 487,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 487,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 487,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 487,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 487,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 69,
									"end": 487,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 487,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b6c263cd4043df64827a8c08a919803786a47f4f3a43791faa165f9f26475e7b64736f6c63430008110033",
									".code": [
										{
											"begin": 69,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 69,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69,
											"end": 487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69,
											"end": 487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69,
											"end": 487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69,
											"end": 487,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 69,
											"end": 487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 487,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 69,
											"end": 487,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "E7C898EF"
										},
										{
											"begin": 69,
											"end": 487,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 69,
											"end": 487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "FC0E6008"
										},
										{
											"begin": 69,
											"end": 487,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69,
											"end": 487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 69,
											"end": 487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 487,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 305,
											"end": 476,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 305,
											"end": 476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 305,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 305,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 305,
											"end": 476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 305,
											"end": 476,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 305,
											"end": 476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 305,
											"end": 476,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 150,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 150,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 150,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 150,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 150,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 150,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 150,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 150,
											"end": 297,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 305,
											"end": 476,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 305,
											"end": 476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 367,
											"end": 378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 389,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 389,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 395,
											"end": 396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 395,
											"end": 399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 395,
											"end": 399,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 389,
											"end": 469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 389,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 389,
											"end": 469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 420,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 415,
											"end": 421,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 415,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 415,
											"end": 421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 415,
											"end": 421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 415,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 415,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 415,
											"end": 421,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 415,
											"end": 421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 415,
											"end": 421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 415,
											"end": 421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 454,
											"end": 457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 454,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 454,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 454,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 454,
											"end": 457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 454,
											"end": 457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 389,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 389,
											"end": 469,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 389,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 389,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 305,
											"end": 476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 150,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 150,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 224,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 215,
											"end": 224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 215,
											"end": 224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 211,
											"end": 290,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 211,
											"end": 290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 228,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 226,
											"end": 227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 226,
											"end": 230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 226,
											"end": 230,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 211,
											"end": 290,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 211,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 211,
											"end": 290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 258,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 259,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 252,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 252,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 252,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 252,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 252,
											"end": 259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 232,
											"end": 235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 232,
											"end": 235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 232,
											"end": 235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 232,
											"end": 235,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 232,
											"end": 235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 232,
											"end": 235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 232,
											"end": 235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 211,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 211,
											"end": 290,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 211,
											"end": 290,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 211,
											"end": 290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 211,
											"end": 290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 176,
											"end": 297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 150,
											"end": 297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 93,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 93,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 42,
											"end": 49,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 86,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 75,
											"end": 80,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 71,
											"end": 87,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 60,
											"end": 87,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 60,
											"end": 87,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 93,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 93,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 93,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 93,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 99,
											"end": 279,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 99,
											"end": 279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 147,
											"end": 224,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 144,
											"end": 145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 244,
											"end": 248,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 241,
											"end": 242,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 234,
											"end": 249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 268,
											"end": 272,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 265,
											"end": 266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 273,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 285,
											"end": 473,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 285,
											"end": 473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 358,
											"end": 359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 342,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 342,
											"end": 360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 342,
											"end": 360,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 342,
											"end": 360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 337,
											"end": 360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 337,
											"end": 360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 374,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 374,
											"end": 392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 392,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 374,
											"end": 392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 369,
											"end": 392,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 415,
											"end": 416,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 408,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 401,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 401,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 438,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 433,
											"end": 436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 430,
											"end": 443,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 427,
											"end": 466,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 427,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 427,
											"end": 466,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 446,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 446,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 446,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 446,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 446,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 427,
											"end": 466,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 427,
											"end": 466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 473,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 285,
											"end": 473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 285,
											"end": 473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 285,
											"end": 473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 285,
											"end": 473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 479,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 479,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 516,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 539,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 539,
											"end": 561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 561,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 539,
											"end": 561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 530,
											"end": 561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 587,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 576,
											"end": 581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 573,
											"end": 588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 570,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 570,
											"end": 611,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 591,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 591,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 591,
											"end": 609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 591,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 591,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 570,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 570,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 638,
											"end": 639,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 631,
											"end": 636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 627,
											"end": 640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 620,
											"end": 640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 620,
											"end": 640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 479,
											"end": 646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 479,
											"end": 646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 479,
											"end": 646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 479,
											"end": 646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/conditional statement/Loop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"forLoop()": "fc0e6008",
							"whileLoop()": "e7c898ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"forLoop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whileLoop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/conditional statement/Loop.sol\":\"Loop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/conditional statement/Loop.sol\":{\"keccak256\":\"0xe790709bfb0959b28ce9fb3b77fdf837e89c9b5fd9989863319bd2c03250a966\",\"urls\":[\"bzz-raw://4afbd79388dde7680d4cd810da9a963eadfd5597405e5f3f45460012c2b31249\",\"dweb:/ipfs/QmZm6RqWQgg82zZS2t9KmX9NAodKe4VnRcuo4BECsyJzX8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/conditional statement/Loop.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/conditional statement/Loop.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n --> contracts/conditional statement/Loop.sol:7:5:\n  |\n7 |     function forLoop() public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 297,
					"file": "contracts/conditional statement/Loop.sol",
					"start": 150
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/conditional statement/Loop.sol:14:5:\n   |\n14 |     function whileLoop() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 476,
					"file": "contracts/conditional statement/Loop.sol",
					"start": 305
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/conditional statement/Loop.sol": {
				"ast": {
					"absolutePath": "contracts/conditional statement/Loop.sol",
					"exportedSymbols": {
						"Loop": [
							50
						]
					},
					"id": 51,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Loop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 50,
							"linearizedBaseContracts": [
								50
							],
							"name": "Loop",
							"nameLocation": "78:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "176:121:0",
										"statements": [
											{
												"assignments": [
													5
												],
												"declarations": [
													{
														"constant": false,
														"id": 5,
														"mutability": "mutable",
														"name": "sum",
														"nameLocation": "193:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 24,
														"src": "187:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 4,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "187:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 7,
												"initialValue": {
													"hexValue": "30",
													"id": 6,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "199:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "187:13:0"
											},
											{
												"body": {
													"id": 22,
													"nodeType": "Block",
													"src": "237:53:0",
													"statements": [
														{
															"expression": {
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 18,
																	"name": "sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "252:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "258:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "252:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 21,
															"nodeType": "ExpressionStatement",
															"src": "252:7:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 12,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "226:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3131",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "228:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_11_by_1",
															"typeString": "int_const 11"
														},
														"value": "11"
													},
													"src": "226:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 23,
												"initializationExpression": {
													"assignments": [
														9
													],
													"declarations": [
														{
															"constant": false,
															"id": 9,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "221:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 23,
															"src": "215:7:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 8,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "215:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 11,
													"initialValue": {
														"hexValue": "31",
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "223:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "215:9:0"
												},
												"loopExpression": {
													"expression": {
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "232:3:0",
														"subExpression": {
															"id": 15,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "232:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 17,
													"nodeType": "ExpressionStatement",
													"src": "232:3:0"
												},
												"nodeType": "ForStatement",
												"src": "211:79:0"
											}
										]
									},
									"functionSelector": "fc0e6008",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forLoop",
									"nameLocation": "159:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "166:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:0:0"
									},
									"scope": 50,
									"src": "150:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "333:143:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "sum",
														"nameLocation": "350:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 48,
														"src": "344:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 28,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "344:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 31,
												"initialValue": {
													"hexValue": "30",
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "355:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "344:12:0"
											},
											{
												"assignments": [
													33
												],
												"declarations": [
													{
														"constant": false,
														"id": 33,
														"mutability": "mutable",
														"name": "i",
														"nameLocation": "373:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 48,
														"src": "367:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 32,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "367:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 35,
												"initialValue": {
													"hexValue": "31",
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "377:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "367:11:0"
											},
											{
												"body": {
													"id": 46,
													"nodeType": "Block",
													"src": "400:69:0",
													"statements": [
														{
															"expression": {
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 39,
																	"name": "sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "415:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "420:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "415:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 42,
															"nodeType": "ExpressionStatement",
															"src": "415:6:0"
														},
														{
															"expression": {
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "454:3:0",
																"subExpression": {
																	"id": 43,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "454:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 45,
															"nodeType": "ExpressionStatement",
															"src": "454:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 36,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "395:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3131",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "397:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_11_by_1",
															"typeString": "int_const 11"
														},
														"value": "11"
													},
													"src": "395:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 47,
												"nodeType": "WhileStatement",
												"src": "389:80:0"
											}
										]
									},
									"functionSelector": "e7c898ef",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "whileLoop",
									"nameLocation": "314:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "333:0:0"
									},
									"scope": 50,
									"src": "305:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 51,
							"src": "69:418:0",
							"usedErrors": []
						}
					],
					"src": "33:454:0"
				},
				"id": 0
			}
		}
	}
}