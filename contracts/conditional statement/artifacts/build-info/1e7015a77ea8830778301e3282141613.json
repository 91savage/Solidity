{
	"id": "1e7015a77ea8830778301e3282141613",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/conditional statement/TransactionProperty2.sol": {
				"content": "//SPDX-License-Identifier : MIT\r\npragma solidity >=0.8.0 < 0.9.0;\r\n\r\ncontract TransactionProperty2 {\r\n\r\n    // 사용자가 주문한 내역을 보고 싶을 때, 요청을 보낸 사용자의 주소를 저장하고 싶을 때\r\n\r\n    mapping(address => uint) private orderList;\r\n\r\n    function newOrderList() external payable {\r\n        orderList[msg.sender] = msg.value;\r\n    }\r\n\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/conditional statement/TransactionProperty2.sol": {
				"TransactionProperty2": {
					"abi": [
						{
							"inputs": [],
							"name": "newOrderList",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/conditional statement/TransactionProperty2.sol\":69:385  contract TransactionProperty2 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/conditional statement/TransactionProperty2.sol\":69:385  contract TransactionProperty2 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ff0d907\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/conditional statement/TransactionProperty2.sol\":285:378  function newOrderList() external payable {... */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      stop\n    tag_4:\n        /* \"contracts/conditional statement/TransactionProperty2.sol\":361:370  msg.value */\n      callvalue\n        /* \"contracts/conditional statement/TransactionProperty2.sol\":337:346  orderList */\n      0x00\n        /* \"contracts/conditional statement/TransactionProperty2.sol\":337:358  orderList[msg.sender] */\n      dup1\n        /* \"contracts/conditional statement/TransactionProperty2.sol\":347:357  msg.sender */\n      caller\n        /* \"contracts/conditional statement/TransactionProperty2.sol\":337:358  orderList[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/conditional statement/TransactionProperty2.sol\":337:370  orderList[msg.sender] = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/conditional statement/TransactionProperty2.sol\":285:378  function newOrderList() external payable {... */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206bf95ea55afee91e61f777c2f2fd370598c1fd119d201610731894a92a76d9cd64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060a48061001e6000396000f3fe608060405260043610601c5760003560e01c80633ff0d907146021575b600080fd5b60276029565b005b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555056fea26469706673582212206bf95ea55afee91e61f777c2f2fd370598c1fd119d201610731894a92a76d9cd64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA4 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FF0D907 EQ PUSH1 0x21 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x27 PUSH1 0x29 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xF95EA55AFEE91E61F777C2F2 REVERT CALLDATACOPY SDIV SWAP9 0xC1 REVERT GT SWAP14 KECCAK256 AND LT PUSH20 0x1894A92A76D9CD64736F6C634300081100330000 ",
							"sourceMap": "69:316:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@newOrderList_17": {
									"entryPoint": 41,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601c5760003560e01c80633ff0d907146021575b600080fd5b60276029565b005b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555056fea26469706673582212206bf95ea55afee91e61f777c2f2fd370598c1fd119d201610731894a92a76d9cd64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FF0D907 EQ PUSH1 0x21 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x27 PUSH1 0x29 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xF95EA55AFEE91E61F777C2F2 REVERT CALLDATACOPY SDIV SWAP9 0xC1 REVERT GT SWAP14 KECCAK256 AND LT PUSH20 0x1894A92A76D9CD64736F6C634300081100330000 ",
							"sourceMap": "69:316:0:-:0;;;;;;;;;;;;;;;;;;;;;285:93;;;:::i;:::-;;;361:9;337;:21;347:10;337:21;;;;;;;;;;;;;;;:33;;;;285:93::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "32800",
								"executionCost": "87",
								"totalCost": "32887"
							},
							"external": {
								"newOrderList()": "22300"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 69,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 69,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69,
									"end": 385,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 69,
									"end": 385,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 69,
									"end": 385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 385,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 69,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 69,
									"end": 385,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 69,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 385,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 69,
									"end": 385,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 69,
									"end": 385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69,
									"end": 385,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69,
									"end": 385,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 385,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 385,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 69,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 385,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bf95ea55afee91e61f777c2f2fd370598c1fd119d201610731894a92a76d9cd64736f6c63430008110033",
									".code": [
										{
											"begin": 69,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 69,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69,
											"end": 385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69,
											"end": 385,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 385,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 69,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 385,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 69,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 69,
											"end": 385,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 69,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "3FF0D907"
										},
										{
											"begin": 69,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 69,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 69,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 285,
											"end": 378,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 285,
											"end": 378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 285,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 285,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 378,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 285,
											"end": 378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 285,
											"end": 378,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 378,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 361,
											"end": 370,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 337,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 347,
											"end": 357,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 337,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 337,
											"end": 358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 337,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 337,
											"end": 358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 337,
											"end": 358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 337,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 337,
											"end": 358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 337,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 337,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 358,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 337,
											"end": 370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 370,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 337,
											"end": 370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/conditional statement/TransactionProperty2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"newOrderList()": "3ff0d907"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"newOrderList\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/conditional statement/TransactionProperty2.sol\":\"TransactionProperty2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/conditional statement/TransactionProperty2.sol\":{\"keccak256\":\"0xc2d71bc0bf648ed66c1706da64d129c2921cc116b65f45a1c9138d514ae5d873\",\"urls\":[\"bzz-raw://dcdbbdc5213cc415e587c462b1a142b8dbde4d3c2a4ca0ec15cf325880c21157\",\"dweb:/ipfs/QmRHmxrvnEuGKJwFXKPGBCw8MFKYAM6x5QCvCGFLYcztpv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/conditional statement/TransactionProperty2.sol:TransactionProperty2",
								"label": "orderList",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/conditional statement/TransactionProperty2.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/conditional statement/TransactionProperty2.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/conditional statement/TransactionProperty2.sol": {
				"ast": {
					"absolutePath": "contracts/conditional statement/TransactionProperty2.sol",
					"exportedSymbols": {
						"TransactionProperty2": [
							18
						]
					},
					"id": 19,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransactionProperty2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 18,
							"linearizedBaseContracts": [
								18
							],
							"name": "TransactionProperty2",
							"nameLocation": "78:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "orderList",
									"nameLocation": "267:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 18,
									"src": "234:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "242:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "234:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "253:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "326:52:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 8,
															"name": "orderList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "337:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 11,
														"indexExpression": {
															"expression": {
																"id": 9,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "347:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "351:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "347:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "337:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 12,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "361:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "365:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "361:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "337:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "337:33:0"
											}
										]
									},
									"functionSelector": "3ff0d907",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "newOrderList",
									"nameLocation": "294:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "306:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "326:0:0"
									},
									"scope": 18,
									"src": "285:93:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 19,
							"src": "69:316:0",
							"usedErrors": []
						}
					],
					"src": "33:354:0"
				},
				"id": 0
			}
		}
	}
}