{
	"id": "923af5a1801f63ada3c7ece390e3a4fb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/conditional statement/Loop.sol": {
				"content": "//SPDX-License-Identifier : MIT\r\npragma solidity >=0.8.0 < 0.9.0;\r\n\r\ncontract Loop {\r\n\r\n    //솔리디티엔 for, while, doWhile 문이 있음.\r\n    function forLoop() public {\r\n        uint8 sum = 0;\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/conditional statement/Loop.sol": {
				"Loop": {
					"abi": [
						{
							"inputs": [],
							"name": "forLoop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/conditional statement/Loop.sol\":69:213  contract Loop {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/conditional statement/Loop.sol\":69:213  contract Loop {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xfc0e6008\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/conditional statement/Loop.sol\":150:208  function forLoop() public {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ce8b6e488dbecd3a3ebfaaf1f8dd9aa8f6076a052c69ba81fd5c94cc31d3dce764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50606d80601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063fc0e600814602d575b600080fd5b60336035565b005b56fea2646970667358221220ce8b6e488dbecd3a3ebfaaf1f8dd9aa8f6076a052c69ba81fd5c94cc31d3dce764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6D DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFC0E6008 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE DUP12 PUSH15 0x488DBECD3A3EBFAAF1F8DD9AA8F607 PUSH11 0x52C69BA81FD5C94CC31D3 0xDC 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "69:144:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@forLoop_9": {
									"entryPoint": 53,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063fc0e600814602d575b600080fd5b60336035565b005b56fea2646970667358221220ce8b6e488dbecd3a3ebfaaf1f8dd9aa8f6076a052c69ba81fd5c94cc31d3dce764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFC0E6008 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE DUP12 PUSH15 0x488DBECD3A3EBFAAF1F8DD9AA8F607 PUSH11 0x52C69BA81FD5C94CC31D3 0xDC 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "69:144:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;150:58;;;:::i;:::-;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "21800",
								"executionCost": "75",
								"totalCost": "21875"
							},
							"external": {
								"forLoop()": "122"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 69,
									"end": 213,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 69,
									"end": 213,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69,
									"end": 213,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 69,
									"end": 213,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 69,
									"end": 213,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 213,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 69,
									"end": 213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 69,
									"end": 213,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 69,
									"end": 213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 213,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 213,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 69,
									"end": 213,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 69,
									"end": 213,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69,
									"end": 213,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69,
									"end": 213,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 213,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 213,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 213,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 69,
									"end": 213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 213,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ce8b6e488dbecd3a3ebfaaf1f8dd9aa8f6076a052c69ba81fd5c94cc31d3dce764736f6c63430008110033",
									".code": [
										{
											"begin": 69,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 69,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69,
											"end": 213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69,
											"end": 213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69,
											"end": 213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69,
											"end": 213,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 69,
											"end": 213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 213,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 69,
											"end": 213,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "FC0E6008"
										},
										{
											"begin": 69,
											"end": 213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 69,
											"end": 213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 69,
											"end": 213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 150,
											"end": 208,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 150,
											"end": 208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 150,
											"end": 208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 150,
											"end": 208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 150,
											"end": 208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 150,
											"end": 208,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 150,
											"end": 208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 150,
											"end": 208,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 150,
											"end": 208,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 150,
											"end": 208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 150,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/conditional statement/Loop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"forLoop()": "fc0e6008"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"forLoop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/conditional statement/Loop.sol\":\"Loop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/conditional statement/Loop.sol\":{\"keccak256\":\"0xcd35ea4ccc2f4c68ffbdcbc7c34f6a55f1ff6ee2e07fc90dca653680fa42c4b4\",\"urls\":[\"bzz-raw://64eb9ab993d4623f132c424350b6dfbeb4dc297f455b8b612704e197220939ad\",\"dweb:/ipfs/QmboTnMgHusbsfjfNjszkrsY9Rvy9vfBK4USp3yLbcpkyX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/conditional statement/Loop.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/conditional statement/Loop.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n --> contracts/conditional statement/Loop.sol:8:9:\n  |\n8 |         uint8 sum = 0;\n  |         ^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 196,
					"file": "contracts/conditional statement/Loop.sol",
					"start": 187
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n --> contracts/conditional statement/Loop.sol:7:5:\n  |\n7 |     function forLoop() public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 208,
					"file": "contracts/conditional statement/Loop.sol",
					"start": 150
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/conditional statement/Loop.sol": {
				"ast": {
					"absolutePath": "contracts/conditional statement/Loop.sol",
					"exportedSymbols": {
						"Loop": [
							10
						]
					},
					"id": 11,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Loop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 10,
							"linearizedBaseContracts": [
								10
							],
							"name": "Loop",
							"nameLocation": "78:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 8,
										"nodeType": "Block",
										"src": "176:32:0",
										"statements": [
											{
												"assignments": [
													5
												],
												"declarations": [
													{
														"constant": false,
														"id": 5,
														"mutability": "mutable",
														"name": "sum",
														"nameLocation": "193:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 8,
														"src": "187:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 4,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "187:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 7,
												"initialValue": {
													"hexValue": "30",
													"id": 6,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "199:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "187:13:0"
											}
										]
									},
									"functionSelector": "fc0e6008",
									"id": 9,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forLoop",
									"nameLocation": "159:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "166:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:0:0"
									},
									"scope": 10,
									"src": "150:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 11,
							"src": "69:144:0",
							"usedErrors": []
						}
					],
					"src": "33:180:0"
				},
				"id": 0
			}
		}
	}
}