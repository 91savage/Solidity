{
	"id": "28a8bf18c7cb2dfd707538b394cbe71c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/conditional statement/TransactionProperty2.sol": {
				"content": "//SPDX-License-Identifier : MIT\r\npragma solidity >=0.8.0 < 0.9.0;\r\n\r\ncontract TransactionProperty2 {\r\n\r\n    mapping(address => uint) private orderlist; // 사용자가 주문한 내역을 보고 싶을 때, 요청한 \r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/conditional statement/TransactionProperty2.sol": {
				"TransactionProperty2": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/conditional statement/TransactionProperty2.sol\":69:222  contract TransactionProperty2 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/conditional statement/TransactionProperty2.sol\":69:222  contract TransactionProperty2 {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122096776560c34178329d96bf606b5d8680196d599e93ed4a6eeed6e100a540192b64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122096776560c34178329d96bf606b5d8680196d599e93ed4a6eeed6e100a540192b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 PUSH24 0x6560C34178329D96BF606B5D8680196D599E93ED4A6EEED6 0xE1 STOP 0xA5 BLOCKHASH NOT 0x2B PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "69:153:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122096776560c34178329d96bf606b5d8680196d599e93ed4a6eeed6e100a540192b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 PUSH24 0x6560C34178329D96BF606B5D8680196D599E93ED4A6EEED6 0xE1 STOP 0xA5 BLOCKHASH NOT 0x2B PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "69:153:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 69,
									"end": 222,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 69,
									"end": 222,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 69,
									"end": 222,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 69,
									"end": 222,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 69,
									"end": 222,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 222,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 69,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 69,
									"end": 222,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 69,
									"end": 222,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 222,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 222,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 69,
									"end": 222,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 69,
									"end": 222,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69,
									"end": 222,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 69,
									"end": 222,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 222,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 222,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 222,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 222,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 69,
									"end": 222,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 222,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122096776560c34178329d96bf606b5d8680196d599e93ed4a6eeed6e100a540192b64736f6c63430008110033",
									".code": [
										{
											"begin": 69,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 69,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69,
											"end": 222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 222,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/conditional statement/TransactionProperty2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/conditional statement/TransactionProperty2.sol\":\"TransactionProperty2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/conditional statement/TransactionProperty2.sol\":{\"keccak256\":\"0x1721d0c2efe212ab8506a8018a0b81bc641f979f5d836b311a634b230f369ade\",\"urls\":[\"bzz-raw://9104c36566d790675c3bff9bef2bd9f0e51780501a9c9a00f1fcc5b09e849ea8\",\"dweb:/ipfs/QmQxJEiYHJsi2Qx8KipFbYEvkGHMM1apwUzJjwH2PbuNQg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/conditional statement/TransactionProperty2.sol:TransactionProperty2",
								"label": "orderlist",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/conditional statement/TransactionProperty2.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/conditional statement/TransactionProperty2.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/conditional statement/TransactionProperty2.sol": {
				"ast": {
					"absolutePath": "contracts/conditional statement/TransactionProperty2.sol",
					"exportedSymbols": {
						"TransactionProperty2": [
							6
						]
					},
					"id": 7,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransactionProperty2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 6,
							"linearizedBaseContracts": [
								6
							],
							"name": "TransactionProperty2",
							"nameLocation": "78:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "orderlist",
									"nameLocation": "141:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "108:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "116:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "108:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "127:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								}
							],
							"scope": 7,
							"src": "69:153:0",
							"usedErrors": []
						}
					],
					"src": "33:191:0"
				},
				"id": 0
			}
		}
	}
}