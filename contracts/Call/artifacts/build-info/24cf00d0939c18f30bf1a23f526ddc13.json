{
	"id": "24cf00d0939c18f30bf1a23f526ddc13",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Call/checkContract.sol": {
				"content": "//SPDX-License-Identifier : MIT\r\npragma solidity >=0.8.0 < 0.9.0;\r\n\r\n// 주소가 컨트랙트인지 eoa인지 체크하기\r\ncontract EthTransfer{\r\n    function isContract(address _addr) private returns(bool isContract){\r\n\r\n        uint32 size;\r\n        assembly{\r\n            size := extcodesize(_addr)\r\n        }\r\n        return (size > 0); // CA, EOA 인지\r\n    }\r\n\r\n    // transfer, send , \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Call/checkContract.sol": {
				"EthTransfer": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Call/checkContract.sol\":125:398  contract EthTransfer{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Call/checkContract.sol\":125:398  contract EthTransfer{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220928dde7e85a6185af163d50d3f8700b6fc2cb266172c3892cbeda78389fb7cb464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220928dde7e85a6185af163d50d3f8700b6fc2cb266172c3892cbeda78389fb7cb464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 DUP14 0xDE PUSH31 0x85A6185AF163D50D3F8700B6FC2CB266172C3892CBEDA78389FB7CB464736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "125:273:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220928dde7e85a6185af163d50d3f8700b6fc2cb266172c3892cbeda78389fb7cb464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 DUP14 0xDE PUSH31 0x85A6185AF163D50D3F8700B6FC2CB266172C3892CBEDA78389FB7CB464736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "125:273:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 125,
									"end": 398,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 125,
									"end": 398,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 125,
									"end": 398,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 125,
									"end": 398,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 125,
									"end": 398,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 125,
									"end": 398,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 125,
									"end": 398,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 398,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 125,
									"end": 398,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 398,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 125,
									"end": 398,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 125,
									"end": 398,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 398,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 125,
									"end": 398,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 125,
									"end": 398,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 398,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 125,
									"end": 398,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 398,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 398,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 125,
									"end": 398,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 398,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220928dde7e85a6185af163d50d3f8700b6fc2cb266172c3892cbeda78389fb7cb464736f6c63430008070033",
									".code": [
										{
											"begin": 125,
											"end": 398,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 125,
											"end": 398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 125,
											"end": 398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 125,
											"end": 398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 125,
											"end": 398,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Call/checkContract.sol\":\"EthTransfer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Call/checkContract.sol\":{\"keccak256\":\"0x71c3cbf3a38f431a78b6ba3f0316fc06294f47ef0c1a5fcecec83a8816db3e0d\",\"urls\":[\"bzz-raw://f00fdc71c7a853c54f19733503d529021264220f57ce571ffab7cb46e0303389\",\"dweb:/ipfs/QmNYJUvacK28F4bciLReihWJn5t7dPjebR2sJaHfHmpJzC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Call/checkContract.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Call/checkContract.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n --> contracts/Call/checkContract.sol:6:56:\n  |\n6 |     function isContract(address _addr) private returns(bool isContract){\n  |                                                        ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n --> contracts/Call/checkContract.sol:6:5:\n  |\n6 |     function isContract(address _addr) private returns(bool isContract){\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 367,
						"file": "contracts/Call/checkContract.sol",
						"message": "The shadowed declaration is here:",
						"start": 152
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 218,
					"file": "contracts/Call/checkContract.sol",
					"start": 203
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n --> contracts/Call/checkContract.sol:6:5:\n  |\n6 |     function isContract(address _addr) private returns(bool isContract){\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 367,
					"file": "contracts/Call/checkContract.sol",
					"start": 152
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Call/checkContract.sol": {
				"ast": {
					"absolutePath": "contracts/Call/checkContract.sol",
					"exportedSymbols": {
						"EthTransfer": [
							19
						]
					},
					"id": 20,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 19,
							"linearizedBaseContracts": [
								19
							],
							"name": "EthTransfer",
							"nameLocation": "134:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "219:148:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "239:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 17,
														"src": "232:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 8,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "232:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 10,
												"nodeType": "VariableDeclarationStatement",
												"src": "232:11:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "262:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "277:26:0",
															"value": {
																"arguments": [
																	{
																		"name": "_addr",
																		"nodeType": "YulIdentifier",
																		"src": "297:5:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "285:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "285:18:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "277:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "297:5:0",
														"valueSize": 1
													},
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "277:4:0",
														"valueSize": 1
													}
												],
												"id": 11,
												"nodeType": "InlineAssembly",
												"src": "254:60:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 12,
																"name": "size",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "332:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "339:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "332:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 15,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "331:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 7,
												"id": 16,
												"nodeType": "Return",
												"src": "324:17:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "161:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "180:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "172:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:15:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "isContract",
												"nameLocation": "208:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "203:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "203:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "202:17:0"
									},
									"scope": 19,
									"src": "152:215:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 20,
							"src": "125:273:0",
							"usedErrors": []
						}
					],
					"src": "33:365:0"
				},
				"id": 0
			}
		}
	}
}