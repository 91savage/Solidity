{
	"id": "3cd57854bb4c71578f74676679dc5e12",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Call/checkContract.sol": {
				"content": "//SPDX-License-Identifier : MIT\r\npragma solidity >=0.8.0 < 0.9.0;\r\n\r\n// 주소가 컨트랙트인지 eoa인지 체크하기\r\ncontract CheckContract{\r\n    function isContract(address _addr) private returns(bool isContract){\r\n        \r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Call/checkContract.sol": {
				"CheckContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Call/checkContract.sol\":125:244  contract CheckContract{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Call/checkContract.sol\":125:244  contract CheckContract{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e6433287983e8d78923150dd0300e545b79303e0b80c22235fd71b9ad980826364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220e6433287983e8d78923150dd0300e545b79303e0b80c22235fd71b9ad980826364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 NUMBER ORIGIN DUP8 SWAP9 RETURNDATACOPY DUP14 PUSH25 0x923150DD0300E545B79303E0B80C22235FD71B9AD980826364 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "125:119:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220e6433287983e8d78923150dd0300e545b79303e0b80c22235fd71b9ad980826364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 NUMBER ORIGIN DUP8 SWAP9 RETURNDATACOPY DUP14 PUSH25 0x923150DD0300E545B79303E0B80C22235FD71B9AD980826364 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "125:119:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 125,
									"end": 244,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 125,
									"end": 244,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 125,
									"end": 244,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 125,
									"end": 244,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 125,
									"end": 244,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 125,
									"end": 244,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 125,
									"end": 244,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 244,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 125,
									"end": 244,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 244,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 125,
									"end": 244,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 125,
									"end": 244,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 244,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 125,
									"end": 244,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 125,
									"end": 244,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 244,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 125,
									"end": 244,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 244,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 244,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 125,
									"end": 244,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 244,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e6433287983e8d78923150dd0300e545b79303e0b80c22235fd71b9ad980826364736f6c63430008070033",
									".code": [
										{
											"begin": 125,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 125,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 125,
											"end": 244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 125,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 125,
											"end": 244,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Call/checkContract.sol\":\"CheckContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Call/checkContract.sol\":{\"keccak256\":\"0x3894f63b79f1a6144459dc6e3bc9cafbb2d5b13ed6405501023d0745d2b4e47c\",\"urls\":[\"bzz-raw://ccb6dfa9ee510125281ec33cc80341ad06692c281d015b68c946852d8fe9f4a9\",\"dweb:/ipfs/QmbhvWy68uT9PPpMbxtEvqVyD8oLuAPSWdqRy5gkkoGQ43\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Call/checkContract.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Call/checkContract.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n --> contracts/Call/checkContract.sol:6:56:\n  |\n6 |     function isContract(address _addr) private returns(bool isContract){\n  |                                                        ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n --> contracts/Call/checkContract.sol:6:5:\n  |\n6 |     function isContract(address _addr) private returns(bool isContract){\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 239,
						"file": "contracts/Call/checkContract.sol",
						"message": "The shadowed declaration is here:",
						"start": 154
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 220,
					"file": "contracts/Call/checkContract.sol",
					"start": 205
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Call/checkContract.sol": {
				"ast": {
					"absolutePath": "contracts/Call/checkContract.sol",
					"exportedSymbols": {
						"CheckContract": [
							10
						]
					},
					"id": 11,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 10,
							"linearizedBaseContracts": [
								10
							],
							"name": "CheckContract",
							"nameLocation": "134:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 8,
										"nodeType": "Block",
										"src": "221:18:0",
										"statements": []
									},
									"id": 9,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "163:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "182:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "174:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "173:15:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "isContract",
												"nameLocation": "210:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "205:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "205:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "204:17:0"
									},
									"scope": 10,
									"src": "154:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 11,
							"src": "125:119:0",
							"usedErrors": []
						}
					],
					"src": "33:211:0"
				},
				"id": 0
			}
		}
	}
}