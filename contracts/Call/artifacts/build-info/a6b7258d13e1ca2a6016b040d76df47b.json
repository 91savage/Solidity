{
	"id": "a6b7258d13e1ca2a6016b040d76df47b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Call/checkContract.sol": {
				"content": "//SPDX-License-Identifier : MIT\r\npragma solidity >=0.8.0 < 0.9.0;\r\n\r\n// 컨트랙트인지 eoa인지 체크하기\r\ncontract CheckContract{\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Call/checkContract.sol": {
				"CheckContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Call/checkContract.sol\":115:143  contract CheckContract{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Call/checkContract.sol\":115:143  contract CheckContract{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220275cc170e45100b8bbab28ac75bdf45bf6a8c8e3679d94bab216b2f5c95f05d364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220275cc170e45100b8bbab28ac75bdf45bf6a8c8e3679d94bab216b2f5c95f05d364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x5C 0xC1 PUSH17 0xE45100B8BBAB28AC75BDF45BF6A8C8E367 SWAP14 SWAP5 0xBA 0xB2 AND 0xB2 CREATE2 0xC9 0x5F SDIV 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "115:28:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220275cc170e45100b8bbab28ac75bdf45bf6a8c8e3679d94bab216b2f5c95f05d364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x5C 0xC1 PUSH17 0xE45100B8BBAB28AC75BDF45BF6A8C8E367 SWAP14 SWAP5 0xBA 0xB2 AND 0xB2 CREATE2 0xC9 0x5F SDIV 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "115:28:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 143,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 115,
									"end": 143,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 115,
									"end": 143,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 115,
									"end": 143,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 115,
									"end": 143,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 115,
									"end": 143,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 115,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 143,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 115,
									"end": 143,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 143,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 115,
									"end": 143,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 115,
									"end": 143,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 143,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 115,
									"end": 143,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 115,
									"end": 143,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 143,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 115,
									"end": 143,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 143,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 143,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 115,
									"end": 143,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 143,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220275cc170e45100b8bbab28ac75bdf45bf6a8c8e3679d94bab216b2f5c95f05d364736f6c63430008070033",
									".code": [
										{
											"begin": 115,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 115,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 115,
											"end": 143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 115,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 115,
											"end": 143,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Call/checkContract.sol\":\"CheckContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Call/checkContract.sol\":{\"keccak256\":\"0x1dd7fd690cb24ee2830e876c54b1b77a143890172002de9cc77cdc7c5712bd18\",\"urls\":[\"bzz-raw://c1f7827c883b8af0e167a5cfa3cdf867064057f3a05fab08fea9a000fedc614e\",\"dweb:/ipfs/QmPmAzMmq5pb9S8nWPtxWna8et8Trs6ezVxVLubrNUWLzQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Call/checkContract.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Call/checkContract.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Call/checkContract.sol": {
				"ast": {
					"absolutePath": "contracts/Call/checkContract.sol",
					"exportedSymbols": {
						"CheckContract": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "CheckContract",
							"nameLocation": "124:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "115:28:0",
							"usedErrors": []
						}
					],
					"src": "33:110:0"
				},
				"id": 0
			}
		}
	}
}