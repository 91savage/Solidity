{
	"id": "b671e2e5c3582feb5f73ec6b5240f76f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Call/checkContract.sol": {
				"content": "//SPDX-License-Identifier : MIT\r\npragma solidity >=0.8.0 < 0.9.0;\r\n\r\n// 주소가 컨트랙트인지 eoa인지 체크하기\r\ncontract CheckContract{\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Call/checkContract.sol": {
				"CheckContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Call/checkContract.sol\":125:153  contract CheckContract{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Call/checkContract.sol\":125:153  contract CheckContract{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205b999e2b9dfb22ab799b4cfd40e0ee277477114caa207d65ea3274e20ded23a664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212205b999e2b9dfb22ab799b4cfd40e0ee277477114caa207d65ea3274e20ded23a664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST SWAP10 SWAP15 0x2B SWAP14 0xFB 0x22 0xAB PUSH26 0x9B4CFD40E0EE277477114CAA207D65EA3274E20DED23A664736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "125:28:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212205b999e2b9dfb22ab799b4cfd40e0ee277477114caa207d65ea3274e20ded23a664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST SWAP10 SWAP15 0x2B SWAP14 0xFB 0x22 0xAB PUSH26 0x9B4CFD40E0EE277477114CAA207D65EA3274E20DED23A664736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "125:28:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 125,
									"end": 153,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 125,
									"end": 153,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 125,
									"end": 153,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 125,
									"end": 153,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 125,
									"end": 153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 125,
									"end": 153,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 125,
									"end": 153,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 153,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 125,
									"end": 153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 125,
									"end": 153,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 125,
									"end": 153,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 153,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 125,
									"end": 153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 125,
									"end": 153,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 125,
									"end": 153,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 153,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 125,
									"end": 153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 153,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205b999e2b9dfb22ab799b4cfd40e0ee277477114caa207d65ea3274e20ded23a664736f6c63430008070033",
									".code": [
										{
											"begin": 125,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 125,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 125,
											"end": 153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 125,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 125,
											"end": 153,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Call/checkContract.sol\":\"CheckContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Call/checkContract.sol\":{\"keccak256\":\"0x4f0d60ed051e806c1b1e87214ab90108ffd37ea6b6ba33b5f29fd76245f3c00b\",\"urls\":[\"bzz-raw://3855cbc0e7be024ff59f6cfbbb08b4d482a0501be204d255656938c0ba9f7a5c\",\"dweb:/ipfs/QmTN8XYfxd4WCQ9ZWpcaCRrQp99m9a7nMiAefASX23rDy9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Call/checkContract.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Call/checkContract.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Call/checkContract.sol": {
				"ast": {
					"absolutePath": "contracts/Call/checkContract.sol",
					"exportedSymbols": {
						"CheckContract": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "CheckContract",
							"nameLocation": "134:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "125:28:0",
							"usedErrors": []
						}
					],
					"src": "33:120:0"
				},
				"id": 0
			}
		}
	}
}